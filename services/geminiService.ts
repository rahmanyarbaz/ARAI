
import { GoogleGenAI, Modality } from "@google/genai";

// This function assumes `process.env.API_KEY` is available in the environment.
const ai = new GoogleGenAI({ apiKey: process.env.API_KEY! });

export interface ImageData {
    base64: string;
    mimeType: string;
}

export const generateHugImage = async (boyImage: ImageData, girlImage: ImageData): Promise<string> => {
    try {
        const prompt = "Using the first image of a boy and the second image of a girl, generate a new, photorealistic image where the boy is hugging the girl. They should be interacting naturally and affectionately. The overall mood should be soft and romantic, with a beautifully blurred background (bokeh effect). Ensure the final image is a seamless composition.";
        
        const response = await ai.models.generateContent({
            model: 'gemini-2.5-flash-image',
            contents: {
                parts: [
                    {
                        inlineData: {
                            data: boyImage.base64.split(',')[1],
                            mimeType: boyImage.mimeType,
                        },
                    },
                    {
                        inlineData: {
                            data: girlImage.base64.split(',')[1],
                            mimeType: girlImage.mimeType,
                        },
                    },
                    {
                        text: prompt,
                    },
                ],
            },
            config: {
                responseModalities: [Modality.IMAGE],
            },
        });

        for (const part of response.candidates?.[0]?.content?.parts || []) {
            if (part.inlineData) {
                return `data:${part.inlineData.mimeType};base64,${part.inlineData.data}`;
            }
        }
        
        throw new Error("No image was generated by the API.");
    } catch (error) {
        console.error("Error generating image with Gemini:", error);
        if (error instanceof Error && error.message.includes('API key not valid')) {
             throw new Error("The API key is invalid. Please check your configuration.");
        }
        throw new Error("Failed to generate the image. The model may have refused the request. Please try again with different images.");
    }
};
